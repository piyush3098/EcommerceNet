// <auto-generated />
using System;
using ECommerce.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210422065041_CommentTable")]
    partial class CommentTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerce.Models.CartModel", b =>
                {
                    b.Property<int>("cart_item_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int>("cart_item_quantity")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("cart_item_id");

                    b.HasIndex("Product_Id");

                    b.HasIndex("user_id");

                    b.ToTable("CartMaster");
                });

            modelBuilder.Entity("ECommerce.Models.ComentsModel", b =>
                {
                    b.Property<int>("Coment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Product_Id1")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Coment_Id");

                    b.HasIndex("Product_Id1");

                    b.HasIndex("User_Id");

                    b.ToTable("CommentMaster");
                });

            modelBuilder.Entity("ECommerce.Models.ProductModel", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Product_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Product_Price")
                        .HasColumnType("real");

                    b.HasKey("Product_Id");

                    b.ToTable("ProductMaster");
                });

            modelBuilder.Entity("ECommerce.Models.UserModel", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("User_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("User_Phone")
                        .HasColumnType("bigint");

                    b.Property<string>("user_password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.ToTable("UserMaster");
                });

            modelBuilder.Entity("ECommerce.Models.CartModel", b =>
                {
                    b.HasOne("ECommerce.Models.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id");

                    b.HasOne("ECommerce.Models.UserModel", "UserModel")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("ECommerce.Models.ComentsModel", b =>
                {
                    b.HasOne("ECommerce.Models.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id1");

                    b.HasOne("ECommerce.Models.UserModel", "UserModel")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("UserModel");
                });
#pragma warning restore 612, 618
        }
    }
}
